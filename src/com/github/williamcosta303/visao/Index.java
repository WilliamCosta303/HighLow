package com.github.williamcosta303.visao;

import javax.swing.JOptionPane;
import com.github.williamcosta303.utilitarios.Arquivo;
import com.github.williamcosta303.utilitarios.Estranho;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import javax.swing.filechooser.*;
//import javax.swing.filechooser.FileNameExtensionFilter;

/*
    Copyright (c) 2016, William A. Costa
    All rights reserved.
    Redistribution and use in source and binary forms, with or without
    modification, are permitted provided that the following conditions are met:
        * Redistributions of source code must retain the above copyright
          notice, this list of conditions and the following disclaimer.
        * Redistributions in binary form must reproduce the above copyright
          notice, this list of conditions and the following disclaimer in the
          documentation and/or other materials provided with the distribution.
        * Neither the name of the William A. Costa nor the
          names of its contributors may be used to endorse or promote products
          derived from this software without specific prior written permission.
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
    ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
    WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
    DISCLAIMED. IN NO EVENT SHALL WILLIAM A. COSTA BE LIABLE FOR ANY
    DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
    (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
    LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
    ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
    (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
    SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

public class Index extends javax.swing.JFrame {

    // Vari√°veis
    Estranho E = new Estranho();
    int cartaAtual[] = {0,0}, cartaAnterior[] = {0,0}, dinheiro = 120, valorAposta = 20, dinheiroInimigo = gerarDinheiroEstranho(), multiplicador = 2;
    String nomeSalvo = "";
    
    public Index() {
        initComponents();
        this.sorteiaUmaCarta(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        lCartaAtual = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lCartaAnterior = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        bApostarMais = new javax.swing.JButton();
        bApostarMenos = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lDinheiroAtual = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSlider1 = new javax.swing.JSlider();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        mEstranho = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        lDinheiroInimigo = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lMultiplicador = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mJogoNovo = new javax.swing.JMenuItem();
        mJogoAbrir = new javax.swing.JMenuItem();
        mJogoSalvar = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        mAjudaSobre = new javax.swing.JMenuItem();

        jFileChooser1.setCurrentDirectory(new java.io.File("C:\\Users\\william.cds\\Documents\\NetBeansProjects\\HighLow\\saves"));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Maior-Menor");
        setIconImage(Toolkit.getDefaultToolkit().getImage(Index.class.getResource("/com/github/williamcosta303/imagens/icone.png")));
        setResizable(false);

        lCartaAtual.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/github/williamcosta303/imagens/copa-1.png"))); // NOI18N
        lCartaAtual.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lCartaAtualMouseClicked(evt);
            }
        });

        jLabel2.setText("Carta atual:");

        lCartaAnterior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/github/williamcosta303/imagens/none.png"))); // NOI18N
        lCartaAnterior.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lCartaAnteriorMouseClicked(evt);
            }
        });

        jLabel4.setText("Carta anterior:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(214, 214, 214)
                        .addComponent(lCartaAnterior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lCartaAtual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(301, 301, 301))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(66, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lCartaAnterior)
                .addGap(34, 34, 34))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lCartaAtual)
                .addContainerGap(89, Short.MAX_VALUE))
        );

        bApostarMais.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/github/williamcosta303/imagens/aposta-mais.png"))); // NOI18N
        bApostarMais.setText("Apostar mais");
        bApostarMais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bApostarMaisActionPerformed(evt);
            }
        });

        bApostarMenos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/github/williamcosta303/imagens/aposta-menos.png"))); // NOI18N
        bApostarMenos.setText("Apostar menos");
        bApostarMenos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bApostarMenosActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Dinheiro atual");

        lDinheiroAtual.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lDinheiroAtual.setText(Integer.toString(this.dinheiro));
        lDinheiroAtual.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lDinheiroAtualMouseClicked(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("$");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Aposta atual");

        jSlider1.setMajorTickSpacing(5);
        jSlider1.setMaximum(35);
        jSlider1.setMinimum(5);
        jSlider1.setMinorTickSpacing(5);
        jSlider1.setPaintLabels(true);
        jSlider1.setPaintTicks(true);
        jSlider1.setSnapToTicks(true);
        jSlider1.setValue(this.valorAposta);
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lDinheiroAtual, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSlider1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lDinheiroAtual)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/github/williamcosta303/imagens/shadyguy.png"))); // NOI18N
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        mEstranho.setEditable(false);
        mEstranho.setColumns(20);
        mEstranho.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        mEstranho.setLineWrap(true);
        mEstranho.setRows(3);
        mEstranho.setText(E.geraFalaInicio());
        mEstranho.setWrapStyleWord(true);
        jScrollPane1.setViewportView(mEstranho);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Multiplicador: x");

        lDinheiroInimigo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lDinheiroInimigo.setText(Integer.toString(this.dinheiroInimigo));
        lDinheiroInimigo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lDinheiroInimigoMouseClicked(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Dinheiro: $");

        lMultiplicador.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lMultiplicador.setText(Integer.toString(this.multiplicador)
        );
        lMultiplicador.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lMultiplicadorMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lMultiplicador, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lDinheiroInimigo, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lDinheiroInimigo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lMultiplicador))
                        .addGap(13, 13, 13))
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jMenu1.setText("Jogo");

        mJogoNovo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        mJogoNovo.setText("Novo jogo");
        mJogoNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mJogoNovoActionPerformed(evt);
            }
        });
        jMenu1.add(mJogoNovo);

        mJogoAbrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        mJogoAbrir.setText("Abrir");
        mJogoAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mJogoAbrirActionPerformed(evt);
            }
        });
        jMenu1.add(mJogoAbrir);

        mJogoSalvar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        mJogoSalvar.setText("Salvar");
        mJogoSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mJogoSalvarActionPerformed(evt);
            }
        });
        jMenu1.add(mJogoSalvar);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Ajuda");

        mAjudaSobre.setText("Sobre");
        mAjudaSobre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mAjudaSobreActionPerformed(evt);
            }
        });
        jMenu2.add(mAjudaSobre);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bApostarMenos, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bApostarMais, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bApostarMais)
                        .addGap(18, 18, 18)
                        .addComponent(bApostarMenos)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
        this.valorAposta = jSlider1.getValue();
    }//GEN-LAST:event_jSlider1StateChanged

    private void bApostarMaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bApostarMaisActionPerformed
        this.sorteiaUmaCarta(false);
        if(cartaAtual[0] > cartaAnterior[0]){
            // GANHOU
            this.dinheiro += this.valorAposta;
            this.dinheiroInimigo -= this.valorAposta;
            
            // Estranho
            this.mEstranho.setText(E.geraFalaVitoria(this.multiplicador));
            this.verificaAlteracaoMultiplicador();
            
            // Mensagem
            JOptionPane.showMessageDialog(this, "Acertou, voc√™ ganhou $" + this.valorAposta + "!", "VIT√ìRIA", JOptionPane.INFORMATION_MESSAGE);
        } else if(cartaAtual[0] < cartaAnterior[0]){
            // PERDEU
            this.dinheiro -= this.valorAposta * multiplicador;
            this.dinheiroInimigo += this.valorAposta * multiplicador;
            
            // Estranho
            this.mEstranho.setText(E.geraFalaDerrota(this.multiplicador));
            this.verificaAlteracaoMultiplicador();
            
            // Mensagem
            JOptionPane.showMessageDialog(this, "Errou, voc√™ perdeu $" + (this.valorAposta * multiplicador) + "!", "DERROTA", JOptionPane.ERROR_MESSAGE);
        } else {
            // EMPATE
            
            // Estranho
            this.mEstranho.setText(E.geraFalaEmpate(this.multiplicador));
            this.verificaAlteracaoMultiplicador();
            
            // Mensagem
            JOptionPane.showMessageDialog(this, "Empate, n√£o h√° modifica√ß√£o no seu dinheiro!", "VIT√ìRIA", JOptionPane.INFORMATION_MESSAGE);
        }
        
        this.atualizarDinheiros();
        this.verificaVitoria();
    }//GEN-LAST:event_bApostarMaisActionPerformed

    private void bApostarMenosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bApostarMenosActionPerformed
        this.sorteiaUmaCarta(false);
        if(cartaAtual[0] < cartaAnterior[0]){
            // GANHOU
            this.dinheiro += this.valorAposta;
            this.dinheiroInimigo -= this.valorAposta;
            
            // Estranho
            this.mEstranho.setText(E.geraFalaVitoria(this.multiplicador));
            this.verificaAlteracaoMultiplicador();
            
            // Mensagem
            JOptionPane.showMessageDialog(this, "Acertou, voc√™ ganhou $" + this.valorAposta + "!", "VIT√ìRIA", JOptionPane.INFORMATION_MESSAGE);
        } else if(cartaAtual[0] > cartaAnterior[0]){
            // PERDEU
            this.dinheiro -= this.valorAposta * multiplicador;
            this.dinheiroInimigo += this.valorAposta * multiplicador;
            
            // Estranho
            this.mEstranho.setText(E.geraFalaDerrota(this.multiplicador));
            this.verificaAlteracaoMultiplicador();
            
            // Mensagem
            JOptionPane.showMessageDialog(this, "Errou, voc√™ perdeu $" + (this.valorAposta * multiplicador) + "!", "DERROTA", JOptionPane.ERROR_MESSAGE);
        } else {
            // EMPATE
            
            // Estranho
            this.mEstranho.setText(E.geraFalaEmpate(this.multiplicador));
            this.verificaAlteracaoMultiplicador();
            
            // Mensagem
            JOptionPane.showMessageDialog(this, "Empate, n√£o h√° modifica√ß√£o no seu dinheiro!", "VIT√ìRIA", JOptionPane.INFORMATION_MESSAGE);
        }
        
        this.atualizarDinheiros();
        this.verificaVitoria();
    }//GEN-LAST:event_bApostarMenosActionPerformed

    private void lMultiplicadorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lMultiplicadorMouseClicked
        this.mEstranho.setText(E.geraFalaGenerica("O multiplicador que voc√™ ir√° perder quando errar, pode deixar que eu cuido dele, hehe."));
    }//GEN-LAST:event_lMultiplicadorMouseClicked

    private void lDinheiroInimigoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lDinheiroInimigoMouseClicked
        if(dinheiroInimigo > dinheiro){
            this.mEstranho.setText(E.geraFalaGenerica("Meu dinheiro, n√£o se preocupe, deve estar sempre maior que o seu!"));
        } else {
            this.mEstranho.setText(E.geraFalaGenerica("Meu dinheiro, n√£o fique se achando, j√° me recupero."));
        }
    }//GEN-LAST:event_lDinheiroInimigoMouseClicked

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        this.mEstranho.setText(E.geraFalaGenerica("Meu lindo rosto, eu deveria estar na televis√£o!"));
    }//GEN-LAST:event_jLabel6MouseClicked

    private void mAjudaSobreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mAjudaSobreActionPerformed
        JOptionPane.showMessageDialog(this, "Maior-menor\n2.1 (build 170116.1)\n\nCriado por: William A. Costa\nhttps://github.com/williamcosta303", "SOBRE", JOptionPane.PLAIN_MESSAGE);
    }//GEN-LAST:event_mAjudaSobreActionPerformed

    private void mJogoNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mJogoNovoActionPerformed
        int confirma = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja iniciar um novo jogo?\nISSO APAGAR√Å TUDO DO JOGO ATUAL!", "CONFIRMA√á√ÉO", JOptionPane.YES_NO_OPTION);
        if(confirma == JOptionPane.YES_OPTION){
            this.iniciarNovoJogo();
        }
    }//GEN-LAST:event_mJogoNovoActionPerformed

    private void mJogoSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mJogoSalvarActionPerformed
        /*
        Ordem:
        1 - cartaAtual[0]
        2 - cartaAtual[1]
        3 - cartaAnterior[0]
        4 - cartaAnterior[1]
        5 - dinheiro
        6 - valorAposta
        7 - dinheiroInimigo
        8 - multiplicador
        9 - nome (Estranho)
        */
        try{
            // Janela para salvar arquivo
            File workingDirectory = new File(System.getProperty("user.dir") + "\\saves");
            jFileChooser1.setCurrentDirectory(workingDirectory);
            FileNameExtensionFilter filtroMMSV = new FileNameExtensionFilter("Saves Maior-menos (*.mmsv)", "mmsv");
            jFileChooser1.addChoosableFileFilter(filtroMMSV);
            jFileChooser1.setFileFilter(filtroMMSV);
            
            
            int result = this.jFileChooser1.showSaveDialog(this);
            
            if(result == javax.swing.JFileChooser.APPROVE_OPTION){
                String tmp = this.jFileChooser1.getSelectedFile().getAbsolutePath();
                if(!tmp.endsWith(".mmsv") && tmp.length() > 0){
                    tmp = tmp + ".mmsv";
                }

                if(tmp.length() > 0){
                    Arquivo A = new Arquivo();
                    String conteudo = cartaAtual[0] + "," + cartaAtual[1] + "," + cartaAnterior[0] + "," + cartaAnterior[1] + "," + dinheiro + "," + valorAposta + "," + dinheiroInimigo + "," + multiplicador + "," + E.getNome();
                    A.salvarArquivo(tmp, conteudo);
                    JOptionPane.showMessageDialog(this, "Jogo salvo com sucesso!", "SALVAR", JOptionPane.INFORMATION_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Cancelando save.", "SALVAR", JOptionPane.INFORMATION_MESSAGE);
            }

            
        } catch(NullPointerException NPE){
            // IGNORA SILENCIOSAMENTE O SAVE
        }
        
    }//GEN-LAST:event_mJogoSalvarActionPerformed

    private void mJogoAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mJogoAbrirActionPerformed
        try{
            // Janela para abrir arquivo
            File workingDirectory = new File(System.getProperty("user.dir") + "\\saves");
            jFileChooser1.setCurrentDirectory(workingDirectory);
            int result = this.jFileChooser1.showOpenDialog(this);
           
            if(result == javax.swing.JFileChooser.APPROVE_OPTION){
                // Arquivo
                Arquivo A = new Arquivo();
                String conteudo[] = A.lerArquivo(jFileChooser1.getSelectedFile().getAbsolutePath()).split(",");

                // Reseta as vari√°veis
                cartaAtual[0] = Integer.parseInt(conteudo[0]);
                cartaAtual[1] = Integer.parseInt(conteudo[1]);
                cartaAnterior[0] = Integer.parseInt(conteudo[2]);
                cartaAnterior[1] = Integer.parseInt(conteudo[3]);
                dinheiro = Integer.parseInt(conteudo[4]);
                valorAposta = Integer.parseInt(conteudo[5]);
                dinheiroInimigo = Integer.parseInt(conteudo[6]);
                multiplicador = Integer.parseInt(conteudo[7]);
                E.setNome(conteudo[8]);

                // Atualiza os componentes da janela
                this.jSlider1.setValue(valorAposta);
                this.lDinheiroAtual.setText(Integer.toString(dinheiro));
                this.lDinheiroInimigo.setText(Integer.toString(dinheiroInimigo));
                this.lMultiplicador.setText(Integer.toString(multiplicador));
                this.mEstranho.setText(E.geraFalaCarregou(this.multiplicador));
                this.atualizarCartas();

                JOptionPane.showMessageDialog(this, "Jogo carregado com sucesso!", "ABRIR", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Cancelando carregamento.", "ABRIR", JOptionPane.INFORMATION_MESSAGE);
            }
            
            
        } catch(IOException IOE){
            JOptionPane.showMessageDialog(this, "Erro ao abrir o save!\nCausa: " + IOE.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
        } catch(NullPointerException | NumberFormatException NPE){
            JOptionPane.showMessageDialog(this, "Esse arquivo n√£o √© considerado um save v√°lido!\nTente outro arquivo.", "ERRO", JOptionPane.ERROR_MESSAGE);
        } catch(ArrayIndexOutOfBoundsException AE){
            // Atualiza os componentes da janela
            this.jSlider1.setValue(valorAposta);
            this.lDinheiroAtual.setText(Integer.toString(dinheiro));
            this.lDinheiroInimigo.setText(Integer.toString(dinheiroInimigo));
            this.lMultiplicador.setText(Integer.toString(multiplicador));
            this.mEstranho.setText(E.geraFalaCarregou(this.multiplicador));
            this.atualizarCartas();
            
            JOptionPane.showMessageDialog(this, "Save antigo detectado!\nSeu jogo foi importado, da pr√≥xima vez que salvar ele ser√° atualizado para a nova vers√£o!", "AVISO", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_mJogoAbrirActionPerformed

    private void lCartaAtualMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lCartaAtualMouseClicked
        this.mEstranho.setText(E.geraFalaCartaAtual(cartaAtual[0], cartaAtual[1], this.multiplicador));
    }//GEN-LAST:event_lCartaAtualMouseClicked

    private void lCartaAnteriorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lCartaAnteriorMouseClicked
        if(cartaAnterior[0] != 0){
            this.mEstranho.setText(E.geraFalaCartaAnterior(cartaAnterior[0], cartaAnterior[1], this.multiplicador));
        } else {
            this.mEstranho.setText(E.geraFalaGenerica("Ainda n√£o come√ßamos a jogar."));
        }
    }//GEN-LAST:event_lCartaAnteriorMouseClicked

    private void lDinheiroAtualMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lDinheiroAtualMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_lDinheiroAtualMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Index().setVisible(true);
            }
        });
    }
    
    private void sorteiaUmaCarta(boolean inicioPartida){
        int cartaGerada = geraNumeroAleatorio(1, 13);
        int naipeGerado = geraNumeroAleatorio(1, 4);
        
        // Evita que a carta sorteada seja igual a anterior
        if(cartaGerada == cartaAtual[0] && naipeGerado == cartaAtual[1]){
            do{
                naipeGerado = geraNumeroAleatorio(1, 4);
            }while(naipeGerado == cartaAtual[1]);
        }
        
        // Salva a carta anterior em seu lugar
        this.cartaAnterior[0] = cartaAtual[0];
        this.cartaAnterior[1] = cartaAtual[1];
        
        // Salva a carta gerada como nova carta
        this.cartaAtual[0] = cartaGerada;
        this.cartaAtual[1] = naipeGerado;
        
        if(inicioPartida){
            lCartaAtual.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/github/williamcosta303/imagens/" + getNaipe(cartaAtual[1]) + "-" + cartaAtual[0] + ".png")));
        } else {
            this.atualizarCartas();
        }
    }
    
    private void atualizarCartas(){
        lCartaAnterior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/github/williamcosta303/imagens/" + getNaipe(cartaAnterior[1]) + "-" + cartaAnterior[0] + ".png")));
        lCartaAtual.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/github/williamcosta303/imagens/" + getNaipe(cartaAtual[1]) + "-" + cartaAtual[0] + ".png")));
    }
    
    private void atualizarDinheiros(){
        this.lDinheiroAtual.setText(Integer.toString(this.dinheiro));
        this.lDinheiroInimigo.setText(Integer.toString(this.dinheiroInimigo));
    }
    
    private String getNaipe(int codigo){
        String resultado;
        switch(codigo){
            case 1:
                resultado = "ouro";
                break;
            case 2:
                resultado = "paus";
                break;
            case 3:
                resultado = "espa";
                break;
            case 4:
                resultado = "copa";
                break;
            default:
                resultado = "bugou pra caralho";
                break;
        }
        return resultado;
    }
    
    private void verificaVitoria(){
        if(dinheiroInimigo <= 0){
            JOptionPane.showMessageDialog(this, "Voc√™ ganhou!\nFicou com todo o dinheiro do estranho.\n\nSeu saldo final: $" + dinheiro + "\nSaldo final do estranho: $" + dinheiroInimigo, "VOC√ä VENCEU", JOptionPane.INFORMATION_MESSAGE);
            this.iniciarNovoJogo();
        } else if(dinheiro <= 0){
            JOptionPane.showMessageDialog(this, "Voc√™ perdeu!\nO estranho ficou com todo o seu dinheiro.\n\nSeu saldo final: $" + dinheiro + "\nSaldo final do estranho: $" + dinheiroInimigo, "VOC√ä PERDEU", JOptionPane.WARNING_MESSAGE);
            this.iniciarNovoJogo();
        }
    }
    
    private void iniciarNovoJogo(){
        // Reseta as vari√°veis
        cartaAtual[0] = 0;
        cartaAtual[1] = 0;
        cartaAnterior[0] = 0;
        cartaAnterior[1] = 0;
        dinheiro = 120;
        valorAposta = 20;
        dinheiroInimigo = gerarDinheiroEstranho();
        multiplicador = 2;

        // Atualiza os componentes da janela
        this.jSlider1.setValue(valorAposta);
        this.lDinheiroAtual.setText(Integer.toString(dinheiro));
        this.lDinheiroInimigo.setText(Integer.toString(dinheiroInimigo));
        this.lMultiplicador.setText(Integer.toString(multiplicador));
        this.mEstranho.setText(E.geraFalaInicio());

        // Reseta o √≠cone da carta anterior
        lCartaAnterior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/github/williamcosta303/imagens/none.png")));

        // Reseta o nome salvo
        this.nomeSalvo = "";
        
        // Sorteia a carta inicial
        this.sorteiaUmaCarta(true);
    }
    
    private int geraNumeroAleatorio(int minimo, int maximo){
        return (int) minimo + (int) (Math.random() * maximo);
    }
    
    /*
        ----------------------
        M√âTODOS DO ESTRANHO
        ---------------------
    */
    
    private void verificaAlteracaoMultiplicador(){
        if(dinheiro > dinheiroInimigo && multiplicador >= 2){
            if((dinheiroInimigo > 120 && dinheiroInimigo < 250) && multiplicador == 2){
                multiplicador = 3;
                this.mEstranho.setText(E.geraFalaGenerica("Hora de mudar esse multiplicador!\nO triplo ou nada!"));
            } else if(dinheiroInimigo <= 120 && (multiplicador == 2 || multiplicador == 3)){
                multiplicador = 4;
                this.mEstranho.setText(E.geraFalaGenerica("Escute aqui, eu fa√ßo as regras aqui! Qu√°druplo ou voc√™ est√° fora! E N√ÉO ESTOU NERVOSO!"));
            }
            this.lMultiplicador.setText(Integer.toString(multiplicador));
        }
        if(dinheiroInimigo > dinheiro && multiplicador != 2){
            if((dinheiroInimigo >= 120 && dinheiroInimigo < 250) && multiplicador == 4){
                multiplicador = 3;
                this.mEstranho.setText(E.geraFalaGenerica("Haha, est√° t√£o mal assim? Vou lhe dar uma colher de ch√°!"));
            } else if(dinheiroInimigo >= 250 && (multiplicador == 3 || multiplicador == 4)){
                multiplicador = 2;
                this.mEstranho.setText(E.geraFalaGenerica("Como estou na vantagem, vou lhe dar a vantagem de mudar o multiplicador!"));
            }
            this.lMultiplicador.setText(Integer.toString(multiplicador));
        }
        
    }
    
    private int gerarDinheiroEstranho(){
        int valorFinal = this.geraNumeroAleatorio(1, 620);
        if(valorFinal < 350){
            do{
                valorFinal+= this.geraNumeroAleatorio(1, 20);
            }while(valorFinal < 350);
        }
        
        return valorFinal;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bApostarMais;
    private javax.swing.JButton bApostarMenos;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JLabel lCartaAnterior;
    private javax.swing.JLabel lCartaAtual;
    private javax.swing.JLabel lDinheiroAtual;
    private javax.swing.JLabel lDinheiroInimigo;
    private javax.swing.JLabel lMultiplicador;
    private javax.swing.JMenuItem mAjudaSobre;
    private javax.swing.JTextArea mEstranho;
    private javax.swing.JMenuItem mJogoAbrir;
    private javax.swing.JMenuItem mJogoNovo;
    private javax.swing.JMenuItem mJogoSalvar;
    // End of variables declaration//GEN-END:variables
}
